# Generated by Django 4.2.7 on 2023-11-19 12:37

from django.db import migrations


def fill_up_steps(apps, schema_editor):
    Step = apps.get_model('storage', 'Step')
    steps = [
        {
            "name": "Выбор боксов",
            "text": """Мы предлагаем несколько видов боксов.

                    1) Локер - площадь 1 кв/м
                        Высота 1м
                        Цена: от 1560 руб/мес

                    2) Низкие  - площадь 1.5 - 3 кв/м
                        Высота 1м
                        Цена: от 2700 руб/мес

                    3) Антресольные - площадь 1.5 - 2 кв/м
                        Высота 1м
                        Цена: от 1980 руб/мес

                    4) Стандартные - площадь 1 - 5 кв/м
                         Высота от 2м
                         Цена: от  2400 руб/мес

                    5) Большие - площадь 6 - 10 кв/м
                        Высота от 2м
                        Цена: от 9600 руб/мес

                    6) Безразмерные - площадь от 10 кв/м
                        До бесконечности
                        Цена: по  запросу
                    """
        },
        {
            "name": "Выбор адреса склада",
            "text": """Выберете 1 из наших складов:

                    1) адрес 1
                    2) адрес 2
                    3) адрес 3
                    """
        },
        {
            "name": "Адрес клиента",
            "text": """Укажите адрес, откуда нужно будет забрать вещи."""
        },
    ]
    for step in steps:
        Step.objects.create(
            name=step['name'],
            text=step['text']
        )


def fill_up_buttons(apps, schema_editor):
    Button = apps.get_model('storage', 'Button')
    Step = apps.get_model('storage', 'Step')
    buttons = [
        {
            "step": ["Выбор боксов", ],
            "text": "Локер",
        },
        {
            "step": ["Выбор боксов", ],
            "text": "Стандартный",
        },
        {
            "step": ["Выбор боксов", ],
            "text": "Низкий",
        },
        {
            "step": ["Выбор боксов", ],
            "text": "Большой",
        },
        {
            "step": ["Выбор боксов", ],
            "text": "Антресольный",
        },
        {
            "step": ["Выбор боксов", ],
            "text": "Безразмерный",
        },
        {
            "step": ["Выбор адреса склада", ],
            "text": "1",
        },
        {
            "step": ["Выбор адреса склада", ],
            "text": "2",
        },
        {
            "step": ["Выбор адреса склада", ],
            "text": "3",
        },
        {
            "step": ["Выбор боксов", "Выбор адреса склада"],
            "text": "Назад",
        },
        {
            "step": ["Выбор боксов", "Выбор адреса склада"],
            "text": "Контакты",
        },
    ]
    for button in buttons:
        steps = [Step.objects.get(name=step) for step in button['step']]

        new_button, is_found = Button.objects.get_or_create(
            text=button['text']
        )

        new_button.step.set(steps)


def add_order_to_buttons(apps, schema_editor):
    Button = apps.get_model('storage', 'Button')
    buttons = [
        {
            "text": "Локер",
            "order": 3,
        },
        {
            "text": "Стандартный",
            "order": 4,
        },
        {
            "text": "Низкий",
            "order": 5,
        },
        {
            "text": "Большой",
            "order": 6,
        },
        {
            "text": "Антресольный",
            "order": 7,
        },
        {
            "text": "Безразмерный",
            "order": 8,
        },
    ]
    for button in buttons:
        new_button = Button.objects.get(
            text=button['text']
        )
        new_button.order = button['order']
        new_button.save()


def sort_buttons(apps, schema_editor):
    Step = apps.get_model('storage', 'Step')
    steps = [
            "Выбор боксов",
            "Выбор адреса склада",
            "Адрес клиента",
    ]
    for step in steps:
        new_step = Step.objects.get(name=step)
        new_step.buttons.all().order_by('order')



class Migration(migrations.Migration):

    dependencies = [
        ('storage', '0029_auto_20231119_1533'),
    ]

    operations = [
        migrations.RunPython(fill_up_steps),
        migrations.RunPython(fill_up_buttons),
        migrations.RunPython(add_order_to_buttons),
        migrations.RunPython(sort_buttons)
    ]
