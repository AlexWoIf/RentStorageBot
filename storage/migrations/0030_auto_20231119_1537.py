# Generated by Django 4.2.7 on 2023-11-19 12:37

from django.db import migrations


def fill_up_steps(apps, schema_editor):
    Step = apps.get_model('storage', 'Step')
    steps = [
        {
            "name": "Выбор боксов new 1",
            "text": """Мы предлагаем несколько видов боксов.

                    1) Локер - площадь 1 кв/м
                        Высота 1м
                        Цена: от 1560 руб/мес

                    2) Низкие  - площадь 1.5 - 3 кв/м
                        Высота 1м
                        Цена: от 2700 руб/мес

                    3) Антресольные - площадь 1.5 - 2 кв/м
                        Высота 1м
                        Цена: от 1980 руб/мес

                    4) Стандартные - площадь 1 - 5 кв/м
                         Высота от 2м
                         Цена: от  2400 руб/мес

                    5) Большие - площадь 6 - 10 кв/м
                        Высота от 2м
                        Цена: от 9600 руб/мес

                    6) Безразмерные - площадь от 10 кв/м
                        До бесконечности
                        Цена: по  запросу
                    """
        },
        {
            "name": "Выбор боксов new 2",
            "text": """Мы предлагаем несколько видов боксов.

                        1) Локер - площадь 1 кв/м
                            Высота 1м
                            Цена: от 1560 руб/мес

                        2) Низкие  - площадь 1.5 - 3 кв/м
                            Высота 1м
                            Цена: от 2700 руб/мес

                        3) Антресольные - площадь 1.5 - 2 кв/м
                            Высота 1м
                            Цена: от 1980 руб/мес

                        4) Стандартные - площадь 1 - 5 кв/м
                             Высота от 2м
                             Цена: от  2400 руб/мес

                        5) Большие - площадь 6 - 10 кв/м
                            Высота от 2м
                            Цена: от 9600 руб/мес

                        6) Безразмерные - площадь от 10 кв/м
                            До бесконечности
                            Цена: по  запросу
                        """
        },
        {
            "name": "Выбор адреса склада",
            "text": """Выберете 1 из наших складов:

                    1) адрес 1
                    2) адрес 2
                    3) адрес 3
                    """
        },
        {
            "name": "Адрес клиента",
            "text": """Укажите адрес, откуда нужно будет забрать вещи."""
        },
    ]
    for step in steps:
        Step.objects.create(
            name=step['name'],
            text=step['text']
        )


def fill_up_buttons(apps, schema_editor):
    Button = apps.get_model('storage', 'Button')
    Step = apps.get_model('storage', 'Step')
    buttons = [
        {
            "step": ["Выбор боксов new 1", ],
            "text": "Локер",
        },
        {
            "step": ["Выбор боксов new 1", ],
            "text": "Стандартный",
        },
        {
            "step": ["Выбор боксов new 1", ],
            "text": "Низкий",
        },
        {
            "step": ["Выбор боксов new 1", ],
            "text": "Большой",
        },
        {
            "step": ["Выбор боксов new 1", ],
            "text": "Антресольный",
        },
        {
            "step": ["Выбор боксов new 1", ],
            "text": "Безразмерный",
        },
        {
            "step": ["Выбор боксов new 2", ],
            "text": "Локер",
        },
        {
            "step": ["Выбор боксов new 2", ],
            "text": "Стандартный",
        },
        {
            "step": ["Выбор боксов new 2", ],
            "text": "Низкий",
        },
        {
            "step": ["Выбор боксов new 2", ],
            "text": "Большой",
        },
        {
            "step": ["Выбор боксов new 2", ],
            "text": "Антресольный",
        },
        {
            "step": ["Выбор боксов new 2", ],
            "text": "Безразмерный",
        },
    ]
    for button in buttons:
        steps = [Step.objects.get(name=step) for step in button['step']]

        new_button = Button.objects.create(
            text=button['text']
        )

        new_button.step.set(steps)

    buttons = [
        {
            "step": ["Выбор адреса склада", ],
            "text": "1",
        },
        {
            "step": ["Выбор адреса склада", ],
            "text": "2",
        },
        {
            "step": ["Выбор адреса склада", ],
            "text": "3",
        },
        {
            "step": ["Выбор боксов new 1", "Выбор боксов new 2",
                     "Выбор адреса склада", "Адрес клиента"],
            "text": "Назад",
        },
        {
            "step": ["Выбор боксов new 1", "Выбор боксов new 2",
                     "Выбор адреса склада", "Адрес клиента"],
            "text": "Контакты",
        },
    ]
    for button in buttons:
        steps = [Step.objects.get(name=step) for step in button['step']]

        new_button, is_found = Button.objects.get_or_create(
            text=button['text']
        )
        for step in steps:
            new_button.step.add(step)


def add_order_to_buttons(apps, schema_editor):
    Button = apps.get_model('storage', 'Button')
    buttons = [
        {
            "text": "Локер",
            "order": 3,
        },
        {
            "text": "Стандартный",
            "order": 4,
        },
        {
            "text": "Низкий",
            "order": 5,
        },
        {
            "text": "Большой",
            "order": 6,
        },
        {
            "text": "Антресольный",
            "order": 7,
        },
        {
            "text": "Безразмерный",
            "order": 8,
        },
    ]
    for button in buttons:
        new_buttons = Button.objects.filter(
            text=button['text']
        )
        for new_button in new_buttons:
            new_button.order = button['order']
            new_button.save()


def add_next_step_to_buttons(apps, schema_editor):
    Button = apps.get_model('storage', 'Button')
    Step = apps.get_model('storage', 'Step')
    buttons = [
        {
            "step": ["Выбор адреса склада", "Адрес клиента"],
            "text": "Локер",
        },
        {
            "step": ["Выбор адреса склада", "Адрес клиента"],
            "text": "Стандартный",
        },
        {
            "step": ["Выбор адреса склада", "Адрес клиента"],
            "text": "Низкий",
        },
        {
            "step": ["Выбор адреса склада", "Адрес клиента"],
            "text": "Большой",
        },
        {
            "step": ["Выбор адреса склада", "Адрес клиента"],
            "text": "Антресольный",
        },
        {
            "step": ["Выбор адреса склада", "Адрес клиента"],
            "text": "Безразмерный",
        },
    ]
    for button in buttons:
        step1 = Step.objects.get(name=button['step'][0])
        step2 = Step.objects.get(name=button['step'][1])

        new_buttons = Button.objects.filter(
            text=button['text']
        )

        button1 = new_buttons.first()
        button2 = new_buttons.last()

        button1.next_step = step1
        button1.save()

        button2.next_step = step2
        button2.save()


def sort_buttons(apps, schema_editor):
    Step = apps.get_model('storage', 'Step')
    steps = [
            "Выбор боксов new 1",
            "Выбор боксов new 2",
            "Выбор адреса склада",
            "Адрес клиента",
    ]
    for step in steps:
        new_step = Step.objects.get(name=step)
        new_step.buttons.all().order_by('order')


class Migration(migrations.Migration):

    dependencies = [
        ('storage', '0029_auto_20231119_1533'),
    ]

    operations = [
        migrations.RunPython(fill_up_steps),
        migrations.RunPython(fill_up_buttons),
        migrations.RunPython(add_order_to_buttons),
        migrations.RunPython(add_next_step_to_buttons),
        migrations.RunPython(sort_buttons)
    ]
